//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DllPedidosClientes.wsCnnClienteAdmin {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsCnnClientesAdminSoap", Namespace="http://SC-Solutions/ServiciosWeb/")]
    public partial class wsCnnClientesAdmin : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConexionExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReporteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProbarConexionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EjecutarSentenciaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReporteExtendidoGeneralOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReporteExtendidoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SentenciaClavesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsCnnClientesAdmin() {
            this.Url = global::DllPedidosClientes.Properties.Settings.Default.DllPedidosClientes_wsCnnClienteAdmin_wsCnnClientesAdmin;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConexionExCompletedEventHandler ConexionExCompleted;
        
        /// <remarks/>
        public event ExecuteExtCompletedEventHandler ExecuteExtCompleted;
        
        /// <remarks/>
        public event GetExecuteCompletedEventHandler GetExecuteCompleted;
        
        /// <remarks/>
        public event ReporteCompletedEventHandler ReporteCompleted;
        
        /// <remarks/>
        public event ProbarConexionCompletedEventHandler ProbarConexionCompleted;
        
        /// <remarks/>
        public event EjecutarSentenciaCompletedEventHandler EjecutarSentenciaCompleted;
        
        /// <remarks/>
        public event ReporteExtendidoGeneralCompletedEventHandler ReporteExtendidoGeneralCompleted;
        
        /// <remarks/>
        public event ReporteExtendidoCompletedEventHandler ReporteExtendidoCompleted;
        
        /// <remarks/>
        public event SentenciaClavesCompletedEventHandler SentenciaClavesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ConexionEx", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ConexionEx(string ArchivoIni) {
            object[] results = this.Invoke("ConexionEx", new object[] {
                        ArchivoIni});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ConexionExAsync(string ArchivoIni) {
            this.ConexionExAsync(ArchivoIni, null);
        }
        
        /// <remarks/>
        public void ConexionExAsync(string ArchivoIni, object userState) {
            if ((this.ConexionExOperationCompleted == null)) {
                this.ConexionExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConexionExOperationCompleted);
            }
            this.InvokeAsync("ConexionEx", new object[] {
                        ArchivoIni}, this.ConexionExOperationCompleted, userState);
        }
        
        private void OnConexionExOperationCompleted(object arg) {
            if ((this.ConexionExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConexionExCompleted(this, new ConexionExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ExecuteExt", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteExt(System.Data.DataSet InformacionCliente, string Solicitud, string Sentencia) {
            object[] results = this.Invoke("ExecuteExt", new object[] {
                        InformacionCliente,
                        Solicitud,
                        Sentencia});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteExtAsync(System.Data.DataSet InformacionCliente, string Solicitud, string Sentencia) {
            this.ExecuteExtAsync(InformacionCliente, Solicitud, Sentencia, null);
        }
        
        /// <remarks/>
        public void ExecuteExtAsync(System.Data.DataSet InformacionCliente, string Solicitud, string Sentencia, object userState) {
            if ((this.ExecuteExtOperationCompleted == null)) {
                this.ExecuteExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteExtOperationCompleted);
            }
            this.InvokeAsync("ExecuteExt", new object[] {
                        InformacionCliente,
                        Solicitud,
                        Sentencia}, this.ExecuteExtOperationCompleted, userState);
        }
        
        private void OnExecuteExtOperationCompleted(object arg) {
            if ((this.ExecuteExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteExtCompleted(this, new ExecuteExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/GetExecute", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExecute(System.Data.DataSet InformacionCliente, string Solicitud) {
            object[] results = this.Invoke("GetExecute", new object[] {
                        InformacionCliente,
                        Solicitud});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExecuteAsync(System.Data.DataSet InformacionCliente, string Solicitud) {
            this.GetExecuteAsync(InformacionCliente, Solicitud, null);
        }
        
        /// <remarks/>
        public void GetExecuteAsync(System.Data.DataSet InformacionCliente, string Solicitud, object userState) {
            if ((this.GetExecuteOperationCompleted == null)) {
                this.GetExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExecuteOperationCompleted);
            }
            this.InvokeAsync("GetExecute", new object[] {
                        InformacionCliente,
                        Solicitud}, this.GetExecuteOperationCompleted, userState);
        }
        
        private void OnGetExecuteOperationCompleted(object arg) {
            if ((this.GetExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExecuteCompleted(this, new GetExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/Reporte", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Reporte(System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente) {
            object[] results = this.Invoke("Reporte", new object[] {
                        InformacionReporteWeb,
                        InformacionCliente});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReporteAsync(System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente) {
            this.ReporteAsync(InformacionReporteWeb, InformacionCliente, null);
        }
        
        /// <remarks/>
        public void ReporteAsync(System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente, object userState) {
            if ((this.ReporteOperationCompleted == null)) {
                this.ReporteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReporteOperationCompleted);
            }
            this.InvokeAsync("Reporte", new object[] {
                        InformacionReporteWeb,
                        InformacionCliente}, this.ReporteOperationCompleted, userState);
        }
        
        private void OnReporteOperationCompleted(object arg) {
            if ((this.ReporteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReporteCompleted(this, new ReporteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ProbarConexion", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProbarConexion(string ArchivoIni) {
            object[] results = this.Invoke("ProbarConexion", new object[] {
                        ArchivoIni});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProbarConexionAsync(string ArchivoIni) {
            this.ProbarConexionAsync(ArchivoIni, null);
        }
        
        /// <remarks/>
        public void ProbarConexionAsync(string ArchivoIni, object userState) {
            if ((this.ProbarConexionOperationCompleted == null)) {
                this.ProbarConexionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProbarConexionOperationCompleted);
            }
            this.InvokeAsync("ProbarConexion", new object[] {
                        ArchivoIni}, this.ProbarConexionOperationCompleted, userState);
        }
        
        private void OnProbarConexionOperationCompleted(object arg) {
            if ((this.ProbarConexionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProbarConexionCompleted(this, new ProbarConexionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/EjecutarSentencia", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EjecutarSentencia(string Estado, string Farmacia, string Sql, string NombreRpt, string TablaFarmacia) {
            object[] results = this.Invoke("EjecutarSentencia", new object[] {
                        Estado,
                        Farmacia,
                        Sql,
                        NombreRpt,
                        TablaFarmacia});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EjecutarSentenciaAsync(string Estado, string Farmacia, string Sql, string NombreRpt, string TablaFarmacia) {
            this.EjecutarSentenciaAsync(Estado, Farmacia, Sql, NombreRpt, TablaFarmacia, null);
        }
        
        /// <remarks/>
        public void EjecutarSentenciaAsync(string Estado, string Farmacia, string Sql, string NombreRpt, string TablaFarmacia, object userState) {
            if ((this.EjecutarSentenciaOperationCompleted == null)) {
                this.EjecutarSentenciaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEjecutarSentenciaOperationCompleted);
            }
            this.InvokeAsync("EjecutarSentencia", new object[] {
                        Estado,
                        Farmacia,
                        Sql,
                        NombreRpt,
                        TablaFarmacia}, this.EjecutarSentenciaOperationCompleted, userState);
        }
        
        private void OnEjecutarSentenciaOperationCompleted(object arg) {
            if ((this.EjecutarSentenciaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EjecutarSentenciaCompleted(this, new EjecutarSentenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ReporteExtendidoGeneral", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ReporteExtendidoGeneral(string Estado, string Farmacia, System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente) {
            object[] results = this.Invoke("ReporteExtendidoGeneral", new object[] {
                        Estado,
                        Farmacia,
                        InformacionReporteWeb,
                        InformacionCliente});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReporteExtendidoGeneralAsync(string Estado, string Farmacia, System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente) {
            this.ReporteExtendidoGeneralAsync(Estado, Farmacia, InformacionReporteWeb, InformacionCliente, null);
        }
        
        /// <remarks/>
        public void ReporteExtendidoGeneralAsync(string Estado, string Farmacia, System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente, object userState) {
            if ((this.ReporteExtendidoGeneralOperationCompleted == null)) {
                this.ReporteExtendidoGeneralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReporteExtendidoGeneralOperationCompleted);
            }
            this.InvokeAsync("ReporteExtendidoGeneral", new object[] {
                        Estado,
                        Farmacia,
                        InformacionReporteWeb,
                        InformacionCliente}, this.ReporteExtendidoGeneralOperationCompleted, userState);
        }
        
        private void OnReporteExtendidoGeneralOperationCompleted(object arg) {
            if ((this.ReporteExtendidoGeneralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReporteExtendidoGeneralCompleted(this, new ReporteExtendidoGeneralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ReporteExtendido", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ReporteExtendido(string Estado, string Farmacia, System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente) {
            object[] results = this.Invoke("ReporteExtendido", new object[] {
                        Estado,
                        Farmacia,
                        InformacionReporteWeb,
                        InformacionCliente});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReporteExtendidoAsync(string Estado, string Farmacia, System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente) {
            this.ReporteExtendidoAsync(Estado, Farmacia, InformacionReporteWeb, InformacionCliente, null);
        }
        
        /// <remarks/>
        public void ReporteExtendidoAsync(string Estado, string Farmacia, System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente, object userState) {
            if ((this.ReporteExtendidoOperationCompleted == null)) {
                this.ReporteExtendidoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReporteExtendidoOperationCompleted);
            }
            this.InvokeAsync("ReporteExtendido", new object[] {
                        Estado,
                        Farmacia,
                        InformacionReporteWeb,
                        InformacionCliente}, this.ReporteExtendidoOperationCompleted, userState);
        }
        
        private void OnReporteExtendidoOperationCompleted(object arg) {
            if ((this.ReporteExtendidoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReporteExtendidoCompleted(this, new ReporteExtendidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/SentenciaClaves", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SentenciaClaves(string Estado, string Farmacia, string Sql, string TablaClaves, System.Data.DataSet dtsTablas) {
            object[] results = this.Invoke("SentenciaClaves", new object[] {
                        Estado,
                        Farmacia,
                        Sql,
                        TablaClaves,
                        dtsTablas});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SentenciaClavesAsync(string Estado, string Farmacia, string Sql, string TablaClaves, System.Data.DataSet dtsTablas) {
            this.SentenciaClavesAsync(Estado, Farmacia, Sql, TablaClaves, dtsTablas, null);
        }
        
        /// <remarks/>
        public void SentenciaClavesAsync(string Estado, string Farmacia, string Sql, string TablaClaves, System.Data.DataSet dtsTablas, object userState) {
            if ((this.SentenciaClavesOperationCompleted == null)) {
                this.SentenciaClavesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSentenciaClavesOperationCompleted);
            }
            this.InvokeAsync("SentenciaClaves", new object[] {
                        Estado,
                        Farmacia,
                        Sql,
                        TablaClaves,
                        dtsTablas}, this.SentenciaClavesOperationCompleted, userState);
        }
        
        private void OnSentenciaClavesOperationCompleted(object arg) {
            if ((this.SentenciaClavesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SentenciaClavesCompleted(this, new SentenciaClavesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ConexionExCompletedEventHandler(object sender, ConexionExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConexionExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConexionExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ExecuteExtCompletedEventHandler(object sender, ExecuteExtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetExecuteCompletedEventHandler(object sender, GetExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReporteCompletedEventHandler(object sender, ReporteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReporteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ProbarConexionCompletedEventHandler(object sender, ProbarConexionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProbarConexionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProbarConexionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EjecutarSentenciaCompletedEventHandler(object sender, EjecutarSentenciaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EjecutarSentenciaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EjecutarSentenciaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReporteExtendidoGeneralCompletedEventHandler(object sender, ReporteExtendidoGeneralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporteExtendidoGeneralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReporteExtendidoGeneralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReporteExtendidoCompletedEventHandler(object sender, ReporteExtendidoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporteExtendidoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReporteExtendidoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SentenciaClavesCompletedEventHandler(object sender, SentenciaClavesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SentenciaClavesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SentenciaClavesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591