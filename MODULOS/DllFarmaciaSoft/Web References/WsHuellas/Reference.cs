//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DllFarmaciaSoft.wsHuellas {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsHuellasSoap", Namespace="http://SC-Solutions/ServiciosWeb/")]
    public partial class wsHuellas : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConexionExOperationCompleted;
        
        private System.Threading.SendOrPostCallback DescargarHuellasOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConexionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DescargarInformacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IntegrarInformacion_RegistroChecadorOperationCompleted;
        
        private System.Threading.SendOrPostCallback IntegrarInformacion_RegistroChecadorDetalleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProbarConexionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsHuellas() {
            this.Url = global::DllFarmaciaSoft.Properties.Settings.Default.DllFarmaciaSoft_WsHuellas_wsHuellas;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConexionExCompletedEventHandler ConexionExCompleted;
        
        /// <remarks/>
        public event DescargarHuellasCompletedEventHandler DescargarHuellasCompleted;
        
        /// <remarks/>
        public event TestConexionCompletedEventHandler TestConexionCompleted;
        
        /// <remarks/>
        public event DescargarInformacionCompletedEventHandler DescargarInformacionCompleted;
        
        /// <remarks/>
        public event IntegrarInformacion_RegistroChecadorCompletedEventHandler IntegrarInformacion_RegistroChecadorCompleted;
        
        /// <remarks/>
        public event IntegrarInformacion_RegistroChecadorDetalleCompletedEventHandler IntegrarInformacion_RegistroChecadorDetalleCompleted;
        
        /// <remarks/>
        public event ProbarConexionCompletedEventHandler ProbarConexionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ConexionEx", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ConexionEx(string ArchivoIni) {
            object[] results = this.Invoke("ConexionEx", new object[] {
                        ArchivoIni});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ConexionExAsync(string ArchivoIni) {
            this.ConexionExAsync(ArchivoIni, null);
        }
        
        /// <remarks/>
        public void ConexionExAsync(string ArchivoIni, object userState) {
            if ((this.ConexionExOperationCompleted == null)) {
                this.ConexionExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConexionExOperationCompleted);
            }
            this.InvokeAsync("ConexionEx", new object[] {
                        ArchivoIni}, this.ConexionExOperationCompleted, userState);
        }
        
        private void OnConexionExOperationCompleted(object arg) {
            if ((this.ConexionExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConexionExCompleted(this, new ConexionExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/DescargarHuellas", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DescargarHuellas(System.Data.DataSet Informacion) {
            object[] results = this.Invoke("DescargarHuellas", new object[] {
                        Informacion});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DescargarHuellasAsync(System.Data.DataSet Informacion) {
            this.DescargarHuellasAsync(Informacion, null);
        }
        
        /// <remarks/>
        public void DescargarHuellasAsync(System.Data.DataSet Informacion, object userState) {
            if ((this.DescargarHuellasOperationCompleted == null)) {
                this.DescargarHuellasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDescargarHuellasOperationCompleted);
            }
            this.InvokeAsync("DescargarHuellas", new object[] {
                        Informacion}, this.DescargarHuellasOperationCompleted, userState);
        }
        
        private void OnDescargarHuellasOperationCompleted(object arg) {
            if ((this.DescargarHuellasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DescargarHuellasCompleted(this, new DescargarHuellasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/TestConexion", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestConexion() {
            object[] results = this.Invoke("TestConexion", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestConexionAsync() {
            this.TestConexionAsync(null);
        }
        
        /// <remarks/>
        public void TestConexionAsync(object userState) {
            if ((this.TestConexionOperationCompleted == null)) {
                this.TestConexionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConexionOperationCompleted);
            }
            this.InvokeAsync("TestConexion", new object[0], this.TestConexionOperationCompleted, userState);
        }
        
        private void OnTestConexionOperationCompleted(object arg) {
            if ((this.TestConexionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConexionCompleted(this, new TestConexionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/DescargarInformacion", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DescargarInformacion() {
            object[] results = this.Invoke("DescargarInformacion", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DescargarInformacionAsync() {
            this.DescargarInformacionAsync(null);
        }
        
        /// <remarks/>
        public void DescargarInformacionAsync(object userState) {
            if ((this.DescargarInformacionOperationCompleted == null)) {
                this.DescargarInformacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDescargarInformacionOperationCompleted);
            }
            this.InvokeAsync("DescargarInformacion", new object[0], this.DescargarInformacionOperationCompleted, userState);
        }
        
        private void OnDescargarInformacionOperationCompleted(object arg) {
            if ((this.DescargarInformacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DescargarInformacionCompleted(this, new DescargarInformacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/IntegrarInformacion_RegistroChecador", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IntegrarInformacion_RegistroChecador(System.Data.DataSet Informacion) {
            object[] results = this.Invoke("IntegrarInformacion_RegistroChecador", new object[] {
                        Informacion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IntegrarInformacion_RegistroChecadorAsync(System.Data.DataSet Informacion) {
            this.IntegrarInformacion_RegistroChecadorAsync(Informacion, null);
        }
        
        /// <remarks/>
        public void IntegrarInformacion_RegistroChecadorAsync(System.Data.DataSet Informacion, object userState) {
            if ((this.IntegrarInformacion_RegistroChecadorOperationCompleted == null)) {
                this.IntegrarInformacion_RegistroChecadorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIntegrarInformacion_RegistroChecadorOperationCompleted);
            }
            this.InvokeAsync("IntegrarInformacion_RegistroChecador", new object[] {
                        Informacion}, this.IntegrarInformacion_RegistroChecadorOperationCompleted, userState);
        }
        
        private void OnIntegrarInformacion_RegistroChecadorOperationCompleted(object arg) {
            if ((this.IntegrarInformacion_RegistroChecadorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IntegrarInformacion_RegistroChecadorCompleted(this, new IntegrarInformacion_RegistroChecadorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/IntegrarInformacion_RegistroChecadorDetalle", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IntegrarInformacion_RegistroChecadorDetalle(string Informacion) {
            object[] results = this.Invoke("IntegrarInformacion_RegistroChecadorDetalle", new object[] {
                        Informacion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IntegrarInformacion_RegistroChecadorDetalleAsync(string Informacion) {
            this.IntegrarInformacion_RegistroChecadorDetalleAsync(Informacion, null);
        }
        
        /// <remarks/>
        public void IntegrarInformacion_RegistroChecadorDetalleAsync(string Informacion, object userState) {
            if ((this.IntegrarInformacion_RegistroChecadorDetalleOperationCompleted == null)) {
                this.IntegrarInformacion_RegistroChecadorDetalleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIntegrarInformacion_RegistroChecadorDetalleOperationCompleted);
            }
            this.InvokeAsync("IntegrarInformacion_RegistroChecadorDetalle", new object[] {
                        Informacion}, this.IntegrarInformacion_RegistroChecadorDetalleOperationCompleted, userState);
        }
        
        private void OnIntegrarInformacion_RegistroChecadorDetalleOperationCompleted(object arg) {
            if ((this.IntegrarInformacion_RegistroChecadorDetalleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IntegrarInformacion_RegistroChecadorDetalleCompleted(this, new IntegrarInformacion_RegistroChecadorDetalleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ProbarConexion", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProbarConexion(string ArchivoIni) {
            object[] results = this.Invoke("ProbarConexion", new object[] {
                        ArchivoIni});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProbarConexionAsync(string ArchivoIni) {
            this.ProbarConexionAsync(ArchivoIni, null);
        }
        
        /// <remarks/>
        public void ProbarConexionAsync(string ArchivoIni, object userState) {
            if ((this.ProbarConexionOperationCompleted == null)) {
                this.ProbarConexionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProbarConexionOperationCompleted);
            }
            this.InvokeAsync("ProbarConexion", new object[] {
                        ArchivoIni}, this.ProbarConexionOperationCompleted, userState);
        }
        
        private void OnProbarConexionOperationCompleted(object arg) {
            if ((this.ProbarConexionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProbarConexionCompleted(this, new ProbarConexionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ConexionExCompletedEventHandler(object sender, ConexionExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConexionExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConexionExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DescargarHuellasCompletedEventHandler(object sender, DescargarHuellasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DescargarHuellasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DescargarHuellasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TestConexionCompletedEventHandler(object sender, TestConexionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConexionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConexionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DescargarInformacionCompletedEventHandler(object sender, DescargarInformacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DescargarInformacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DescargarInformacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IntegrarInformacion_RegistroChecadorCompletedEventHandler(object sender, IntegrarInformacion_RegistroChecadorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IntegrarInformacion_RegistroChecadorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IntegrarInformacion_RegistroChecadorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IntegrarInformacion_RegistroChecadorDetalleCompletedEventHandler(object sender, IntegrarInformacion_RegistroChecadorDetalleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IntegrarInformacion_RegistroChecadorDetalleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IntegrarInformacion_RegistroChecadorDetalleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ProbarConexionCompletedEventHandler(object sender, ProbarConexionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProbarConexionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProbarConexionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591