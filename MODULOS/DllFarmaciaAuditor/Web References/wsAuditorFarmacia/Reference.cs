//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DllFarmaciaAuditor.wsAuditorFarmacia {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsCnnClienteSoap", Namespace="http://SC-Solutions/ServiciosWeb/")]
    public partial class wsCnnCliente : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IniciarServicioOperationCompleted;
        
        private System.Threading.SendOrPostCallback InformacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConexionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConexionExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReporteExcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReporteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProbarConexionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback wwwDirectorioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteRemotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReporteRemotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InformacionOrdenCompraOperationCompleted;
        
        private System.Threading.SendOrPostCallback InformacionPedidosOperationCompleted;
        
        private System.Threading.SendOrPostCallback InformacionTransferenciasOperationCompleted;
        
        private System.Threading.SendOrPostCallback InformacionTransferenciasEstatalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InformacionRecepcionDiariaOrdenesComprasOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsCnnCliente() {
            this.Url = global::DllFarmaciaAuditor.Properties.Settings.Default.DllFarmaciaAuditor_wsAuditorFarmacia_wsCnnCliente;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IniciarServicioCompletedEventHandler IniciarServicioCompleted;
        
        /// <remarks/>
        public event InformacionCompletedEventHandler InformacionCompleted;
        
        /// <remarks/>
        public event ConexionCompletedEventHandler ConexionCompleted;
        
        /// <remarks/>
        public event ConexionExCompletedEventHandler ConexionExCompleted;
        
        /// <remarks/>
        public event ExecuteCompletedEventHandler ExecuteCompleted;
        
        /// <remarks/>
        public event ExecuteExtCompletedEventHandler ExecuteExtCompleted;
        
        /// <remarks/>
        public event ReporteExcelCompletedEventHandler ReporteExcelCompleted;
        
        /// <remarks/>
        public event ReporteCompletedEventHandler ReporteCompleted;
        
        /// <remarks/>
        public event ProbarConexionCompletedEventHandler ProbarConexionCompleted;
        
        /// <remarks/>
        public event TestConectionCompletedEventHandler TestConectionCompleted;
        
        /// <remarks/>
        public event wwwDirectorioCompletedEventHandler wwwDirectorioCompleted;
        
        /// <remarks/>
        public event ExecuteRemotoCompletedEventHandler ExecuteRemotoCompleted;
        
        /// <remarks/>
        public event ReporteRemotoCompletedEventHandler ReporteRemotoCompleted;
        
        /// <remarks/>
        public event InformacionOrdenCompraCompletedEventHandler InformacionOrdenCompraCompleted;
        
        /// <remarks/>
        public event InformacionPedidosCompletedEventHandler InformacionPedidosCompleted;
        
        /// <remarks/>
        public event InformacionTransferenciasCompletedEventHandler InformacionTransferenciasCompleted;
        
        /// <remarks/>
        public event InformacionTransferenciasEstatalesCompletedEventHandler InformacionTransferenciasEstatalesCompleted;
        
        /// <remarks/>
        public event InformacionRecepcionDiariaOrdenesComprasCompletedEventHandler InformacionRecepcionDiariaOrdenesComprasCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/IniciarServicio", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IniciarServicio(string Servicio) {
            object[] results = this.Invoke("IniciarServicio", new object[] {
                        Servicio});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IniciarServicioAsync(string Servicio) {
            this.IniciarServicioAsync(Servicio, null);
        }
        
        /// <remarks/>
        public void IniciarServicioAsync(string Servicio, object userState) {
            if ((this.IniciarServicioOperationCompleted == null)) {
                this.IniciarServicioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIniciarServicioOperationCompleted);
            }
            this.InvokeAsync("IniciarServicio", new object[] {
                        Servicio}, this.IniciarServicioOperationCompleted, userState);
        }
        
        private void OnIniciarServicioOperationCompleted(object arg) {
            if ((this.IniciarServicioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IniciarServicioCompleted(this, new IniciarServicioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/Informacion", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Informacion(string ArchivoCgf, string NombreArchivo, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Archivo, string Estado, string Farmacia) {
            object[] results = this.Invoke("Informacion", new object[] {
                        ArchivoCgf,
                        NombreArchivo,
                        Archivo,
                        Estado,
                        Farmacia});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InformacionAsync(string ArchivoCgf, string NombreArchivo, byte[] Archivo, string Estado, string Farmacia) {
            this.InformacionAsync(ArchivoCgf, NombreArchivo, Archivo, Estado, Farmacia, null);
        }
        
        /// <remarks/>
        public void InformacionAsync(string ArchivoCgf, string NombreArchivo, byte[] Archivo, string Estado, string Farmacia, object userState) {
            if ((this.InformacionOperationCompleted == null)) {
                this.InformacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformacionOperationCompleted);
            }
            this.InvokeAsync("Informacion", new object[] {
                        ArchivoCgf,
                        NombreArchivo,
                        Archivo,
                        Estado,
                        Farmacia}, this.InformacionOperationCompleted, userState);
        }
        
        private void OnInformacionOperationCompleted(object arg) {
            if ((this.InformacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformacionCompleted(this, new InformacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/Conexion", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Conexion() {
            object[] results = this.Invoke("Conexion", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ConexionAsync() {
            this.ConexionAsync(null);
        }
        
        /// <remarks/>
        public void ConexionAsync(object userState) {
            if ((this.ConexionOperationCompleted == null)) {
                this.ConexionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConexionOperationCompleted);
            }
            this.InvokeAsync("Conexion", new object[0], this.ConexionOperationCompleted, userState);
        }
        
        private void OnConexionOperationCompleted(object arg) {
            if ((this.ConexionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConexionCompleted(this, new ConexionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ConexionEx", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ConexionEx(string ArchivoIni) {
            object[] results = this.Invoke("ConexionEx", new object[] {
                        ArchivoIni});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ConexionExAsync(string ArchivoIni) {
            this.ConexionExAsync(ArchivoIni, null);
        }
        
        /// <remarks/>
        public void ConexionExAsync(string ArchivoIni, object userState) {
            if ((this.ConexionExOperationCompleted == null)) {
                this.ConexionExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConexionExOperationCompleted);
            }
            this.InvokeAsync("ConexionEx", new object[] {
                        ArchivoIni}, this.ConexionExOperationCompleted, userState);
        }
        
        private void OnConexionExOperationCompleted(object arg) {
            if ((this.ConexionExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConexionExCompleted(this, new ConexionExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/Execute", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Execute(System.Data.DataSet Parametros, System.Data.DataSet InformacionCliente, bool UsarTransaccion, string Contenedor, string Sentencia) {
            object[] results = this.Invoke("Execute", new object[] {
                        Parametros,
                        InformacionCliente,
                        UsarTransaccion,
                        Contenedor,
                        Sentencia});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsync(System.Data.DataSet Parametros, System.Data.DataSet InformacionCliente, bool UsarTransaccion, string Contenedor, string Sentencia) {
            this.ExecuteAsync(Parametros, InformacionCliente, UsarTransaccion, Contenedor, Sentencia, null);
        }
        
        /// <remarks/>
        public void ExecuteAsync(System.Data.DataSet Parametros, System.Data.DataSet InformacionCliente, bool UsarTransaccion, string Contenedor, string Sentencia, object userState) {
            if ((this.ExecuteOperationCompleted == null)) {
                this.ExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteOperationCompleted);
            }
            this.InvokeAsync("Execute", new object[] {
                        Parametros,
                        InformacionCliente,
                        UsarTransaccion,
                        Contenedor,
                        Sentencia}, this.ExecuteOperationCompleted, userState);
        }
        
        private void OnExecuteOperationCompleted(object arg) {
            if ((this.ExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ExecuteExt", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteExt(System.Data.DataSet InformacionCliente, string Solicitud, string Sentencia) {
            object[] results = this.Invoke("ExecuteExt", new object[] {
                        InformacionCliente,
                        Solicitud,
                        Sentencia});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteExtAsync(System.Data.DataSet InformacionCliente, string Solicitud, string Sentencia) {
            this.ExecuteExtAsync(InformacionCliente, Solicitud, Sentencia, null);
        }
        
        /// <remarks/>
        public void ExecuteExtAsync(System.Data.DataSet InformacionCliente, string Solicitud, string Sentencia, object userState) {
            if ((this.ExecuteExtOperationCompleted == null)) {
                this.ExecuteExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteExtOperationCompleted);
            }
            this.InvokeAsync("ExecuteExt", new object[] {
                        InformacionCliente,
                        Solicitud,
                        Sentencia}, this.ExecuteExtOperationCompleted, userState);
        }
        
        private void OnExecuteExtOperationCompleted(object arg) {
            if ((this.ExecuteExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteExtCompleted(this, new ExecuteExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ReporteExcel", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ReporteExcel(string NombrePlantilla, [System.Xml.Serialization.XmlElementAttribute("Informacion")] string Informacion1) {
            object[] results = this.Invoke("ReporteExcel", new object[] {
                        NombrePlantilla,
                        Informacion1});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReporteExcelAsync(string NombrePlantilla, string Informacion1) {
            this.ReporteExcelAsync(NombrePlantilla, Informacion1, null);
        }
        
        /// <remarks/>
        public void ReporteExcelAsync(string NombrePlantilla, string Informacion1, object userState) {
            if ((this.ReporteExcelOperationCompleted == null)) {
                this.ReporteExcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReporteExcelOperationCompleted);
            }
            this.InvokeAsync("ReporteExcel", new object[] {
                        NombrePlantilla,
                        Informacion1}, this.ReporteExcelOperationCompleted, userState);
        }
        
        private void OnReporteExcelOperationCompleted(object arg) {
            if ((this.ReporteExcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReporteExcelCompleted(this, new ReporteExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/Reporte", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Reporte(System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente) {
            object[] results = this.Invoke("Reporte", new object[] {
                        InformacionReporteWeb,
                        InformacionCliente});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReporteAsync(System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente) {
            this.ReporteAsync(InformacionReporteWeb, InformacionCliente, null);
        }
        
        /// <remarks/>
        public void ReporteAsync(System.Data.DataSet InformacionReporteWeb, System.Data.DataSet InformacionCliente, object userState) {
            if ((this.ReporteOperationCompleted == null)) {
                this.ReporteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReporteOperationCompleted);
            }
            this.InvokeAsync("Reporte", new object[] {
                        InformacionReporteWeb,
                        InformacionCliente}, this.ReporteOperationCompleted, userState);
        }
        
        private void OnReporteOperationCompleted(object arg) {
            if ((this.ReporteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReporteCompleted(this, new ReporteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ProbarConexion", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProbarConexion(string ArchivoIni) {
            object[] results = this.Invoke("ProbarConexion", new object[] {
                        ArchivoIni});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProbarConexionAsync(string ArchivoIni) {
            this.ProbarConexionAsync(ArchivoIni, null);
        }
        
        /// <remarks/>
        public void ProbarConexionAsync(string ArchivoIni, object userState) {
            if ((this.ProbarConexionOperationCompleted == null)) {
                this.ProbarConexionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProbarConexionOperationCompleted);
            }
            this.InvokeAsync("ProbarConexion", new object[] {
                        ArchivoIni}, this.ProbarConexionOperationCompleted, userState);
        }
        
        private void OnProbarConexionOperationCompleted(object arg) {
            if ((this.ProbarConexionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProbarConexionCompleted(this, new ProbarConexionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/TestConection", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestConection() {
            object[] results = this.Invoke("TestConection", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestConectionAsync() {
            this.TestConectionAsync(null);
        }
        
        /// <remarks/>
        public void TestConectionAsync(object userState) {
            if ((this.TestConectionOperationCompleted == null)) {
                this.TestConectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConectionOperationCompleted);
            }
            this.InvokeAsync("TestConection", new object[0], this.TestConectionOperationCompleted, userState);
        }
        
        private void OnTestConectionOperationCompleted(object arg) {
            if ((this.TestConectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConectionCompleted(this, new TestConectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/wwwDirectorio", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet wwwDirectorio() {
            object[] results = this.Invoke("wwwDirectorio", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void wwwDirectorioAsync() {
            this.wwwDirectorioAsync(null);
        }
        
        /// <remarks/>
        public void wwwDirectorioAsync(object userState) {
            if ((this.wwwDirectorioOperationCompleted == null)) {
                this.wwwDirectorioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwwwDirectorioOperationCompleted);
            }
            this.InvokeAsync("wwwDirectorio", new object[0], this.wwwDirectorioOperationCompleted, userState);
        }
        
        private void OnwwwDirectorioOperationCompleted(object arg) {
            if ((this.wwwDirectorioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wwwDirectorioCompleted(this, new wwwDirectorioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ExecuteRemoto", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteRemoto([System.Xml.Serialization.XmlElementAttribute("Informacion")] System.Data.DataSet Informacion1, System.Data.DataSet InformacionCliente) {
            object[] results = this.Invoke("ExecuteRemoto", new object[] {
                        Informacion1,
                        InformacionCliente});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteRemotoAsync(System.Data.DataSet Informacion1, System.Data.DataSet InformacionCliente) {
            this.ExecuteRemotoAsync(Informacion1, InformacionCliente, null);
        }
        
        /// <remarks/>
        public void ExecuteRemotoAsync(System.Data.DataSet Informacion1, System.Data.DataSet InformacionCliente, object userState) {
            if ((this.ExecuteRemotoOperationCompleted == null)) {
                this.ExecuteRemotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteRemotoOperationCompleted);
            }
            this.InvokeAsync("ExecuteRemoto", new object[] {
                        Informacion1,
                        InformacionCliente}, this.ExecuteRemotoOperationCompleted, userState);
        }
        
        private void OnExecuteRemotoOperationCompleted(object arg) {
            if ((this.ExecuteRemotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteRemotoCompleted(this, new ExecuteRemotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ReporteRemoto", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ReporteRemoto([System.Xml.Serialization.XmlElementAttribute("Informacion")] System.Data.DataSet Informacion1, System.Data.DataSet InformacionCliente, System.Data.DataSet InformacionReporteWeb) {
            object[] results = this.Invoke("ReporteRemoto", new object[] {
                        Informacion1,
                        InformacionCliente,
                        InformacionReporteWeb});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReporteRemotoAsync(System.Data.DataSet Informacion1, System.Data.DataSet InformacionCliente, System.Data.DataSet InformacionReporteWeb) {
            this.ReporteRemotoAsync(Informacion1, InformacionCliente, InformacionReporteWeb, null);
        }
        
        /// <remarks/>
        public void ReporteRemotoAsync(System.Data.DataSet Informacion1, System.Data.DataSet InformacionCliente, System.Data.DataSet InformacionReporteWeb, object userState) {
            if ((this.ReporteRemotoOperationCompleted == null)) {
                this.ReporteRemotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReporteRemotoOperationCompleted);
            }
            this.InvokeAsync("ReporteRemoto", new object[] {
                        Informacion1,
                        InformacionCliente,
                        InformacionReporteWeb}, this.ReporteRemotoOperationCompleted, userState);
        }
        
        private void OnReporteRemotoOperationCompleted(object arg) {
            if ((this.ReporteRemotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReporteRemotoCompleted(this, new ReporteRemotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/InformacionOrdenCompra", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InformacionOrdenCompra(string Empresa, string Estado, string Destino, string Folio) {
            object[] results = this.Invoke("InformacionOrdenCompra", new object[] {
                        Empresa,
                        Estado,
                        Destino,
                        Folio});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InformacionOrdenCompraAsync(string Empresa, string Estado, string Destino, string Folio) {
            this.InformacionOrdenCompraAsync(Empresa, Estado, Destino, Folio, null);
        }
        
        /// <remarks/>
        public void InformacionOrdenCompraAsync(string Empresa, string Estado, string Destino, string Folio, object userState) {
            if ((this.InformacionOrdenCompraOperationCompleted == null)) {
                this.InformacionOrdenCompraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformacionOrdenCompraOperationCompleted);
            }
            this.InvokeAsync("InformacionOrdenCompra", new object[] {
                        Empresa,
                        Estado,
                        Destino,
                        Folio}, this.InformacionOrdenCompraOperationCompleted, userState);
        }
        
        private void OnInformacionOrdenCompraOperationCompleted(object arg) {
            if ((this.InformacionOrdenCompraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformacionOrdenCompraCompleted(this, new InformacionOrdenCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/InformacionPedidos", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InformacionPedidos(string Empresa, string Estado, string Farmacia, int TipoDePedido) {
            object[] results = this.Invoke("InformacionPedidos", new object[] {
                        Empresa,
                        Estado,
                        Farmacia,
                        TipoDePedido});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InformacionPedidosAsync(string Empresa, string Estado, string Farmacia, int TipoDePedido) {
            this.InformacionPedidosAsync(Empresa, Estado, Farmacia, TipoDePedido, null);
        }
        
        /// <remarks/>
        public void InformacionPedidosAsync(string Empresa, string Estado, string Farmacia, int TipoDePedido, object userState) {
            if ((this.InformacionPedidosOperationCompleted == null)) {
                this.InformacionPedidosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformacionPedidosOperationCompleted);
            }
            this.InvokeAsync("InformacionPedidos", new object[] {
                        Empresa,
                        Estado,
                        Farmacia,
                        TipoDePedido}, this.InformacionPedidosOperationCompleted, userState);
        }
        
        private void OnInformacionPedidosOperationCompleted(object arg) {
            if ((this.InformacionPedidosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformacionPedidosCompleted(this, new InformacionPedidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/InformacionTransferencias", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InformacionTransferencias(string Estado, string FarmaciaOrigen, string FarmaciaDestino, string Folio) {
            object[] results = this.Invoke("InformacionTransferencias", new object[] {
                        Estado,
                        FarmaciaOrigen,
                        FarmaciaDestino,
                        Folio});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InformacionTransferenciasAsync(string Estado, string FarmaciaOrigen, string FarmaciaDestino, string Folio) {
            this.InformacionTransferenciasAsync(Estado, FarmaciaOrigen, FarmaciaDestino, Folio, null);
        }
        
        /// <remarks/>
        public void InformacionTransferenciasAsync(string Estado, string FarmaciaOrigen, string FarmaciaDestino, string Folio, object userState) {
            if ((this.InformacionTransferenciasOperationCompleted == null)) {
                this.InformacionTransferenciasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformacionTransferenciasOperationCompleted);
            }
            this.InvokeAsync("InformacionTransferencias", new object[] {
                        Estado,
                        FarmaciaOrigen,
                        FarmaciaDestino,
                        Folio}, this.InformacionTransferenciasOperationCompleted, userState);
        }
        
        private void OnInformacionTransferenciasOperationCompleted(object arg) {
            if ((this.InformacionTransferenciasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformacionTransferenciasCompleted(this, new InformacionTransferenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/InformacionTransferenciasEstatales", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InformacionTransferenciasEstatales(string EstadoOrigen, string FarmaciaOrigen, string EstadoDestino, string FarmaciaDestino, string Folio) {
            object[] results = this.Invoke("InformacionTransferenciasEstatales", new object[] {
                        EstadoOrigen,
                        FarmaciaOrigen,
                        EstadoDestino,
                        FarmaciaDestino,
                        Folio});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InformacionTransferenciasEstatalesAsync(string EstadoOrigen, string FarmaciaOrigen, string EstadoDestino, string FarmaciaDestino, string Folio) {
            this.InformacionTransferenciasEstatalesAsync(EstadoOrigen, FarmaciaOrigen, EstadoDestino, FarmaciaDestino, Folio, null);
        }
        
        /// <remarks/>
        public void InformacionTransferenciasEstatalesAsync(string EstadoOrigen, string FarmaciaOrigen, string EstadoDestino, string FarmaciaDestino, string Folio, object userState) {
            if ((this.InformacionTransferenciasEstatalesOperationCompleted == null)) {
                this.InformacionTransferenciasEstatalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformacionTransferenciasEstatalesOperationCompleted);
            }
            this.InvokeAsync("InformacionTransferenciasEstatales", new object[] {
                        EstadoOrigen,
                        FarmaciaOrigen,
                        EstadoDestino,
                        FarmaciaDestino,
                        Folio}, this.InformacionTransferenciasEstatalesOperationCompleted, userState);
        }
        
        private void OnInformacionTransferenciasEstatalesOperationCompleted(object arg) {
            if ((this.InformacionTransferenciasEstatalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformacionTransferenciasEstatalesCompleted(this, new InformacionTransferenciasEstatalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/InformacionRecepcionDiariaOrdenesCompras", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InformacionRecepcionDiariaOrdenesCompras(string Empresa, string Estado, string EntregarEn) {
            object[] results = this.Invoke("InformacionRecepcionDiariaOrdenesCompras", new object[] {
                        Empresa,
                        Estado,
                        EntregarEn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InformacionRecepcionDiariaOrdenesComprasAsync(string Empresa, string Estado, string EntregarEn) {
            this.InformacionRecepcionDiariaOrdenesComprasAsync(Empresa, Estado, EntregarEn, null);
        }
        
        /// <remarks/>
        public void InformacionRecepcionDiariaOrdenesComprasAsync(string Empresa, string Estado, string EntregarEn, object userState) {
            if ((this.InformacionRecepcionDiariaOrdenesComprasOperationCompleted == null)) {
                this.InformacionRecepcionDiariaOrdenesComprasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformacionRecepcionDiariaOrdenesComprasOperationCompleted);
            }
            this.InvokeAsync("InformacionRecepcionDiariaOrdenesCompras", new object[] {
                        Empresa,
                        Estado,
                        EntregarEn}, this.InformacionRecepcionDiariaOrdenesComprasOperationCompleted, userState);
        }
        
        private void OnInformacionRecepcionDiariaOrdenesComprasOperationCompleted(object arg) {
            if ((this.InformacionRecepcionDiariaOrdenesComprasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformacionRecepcionDiariaOrdenesComprasCompleted(this, new InformacionRecepcionDiariaOrdenesComprasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IniciarServicioCompletedEventHandler(object sender, IniciarServicioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IniciarServicioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IniciarServicioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InformacionCompletedEventHandler(object sender, InformacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ConexionCompletedEventHandler(object sender, ConexionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConexionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConexionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ConexionExCompletedEventHandler(object sender, ConexionExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConexionExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConexionExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ExecuteCompletedEventHandler(object sender, ExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ExecuteExtCompletedEventHandler(object sender, ExecuteExtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReporteExcelCompletedEventHandler(object sender, ReporteExcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporteExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReporteExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReporteCompletedEventHandler(object sender, ReporteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReporteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ProbarConexionCompletedEventHandler(object sender, ProbarConexionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProbarConexionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProbarConexionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TestConectionCompletedEventHandler(object sender, TestConectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void wwwDirectorioCompletedEventHandler(object sender, wwwDirectorioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wwwDirectorioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wwwDirectorioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ExecuteRemotoCompletedEventHandler(object sender, ExecuteRemotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteRemotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteRemotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReporteRemotoCompletedEventHandler(object sender, ReporteRemotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporteRemotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReporteRemotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InformacionOrdenCompraCompletedEventHandler(object sender, InformacionOrdenCompraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformacionOrdenCompraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformacionOrdenCompraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InformacionPedidosCompletedEventHandler(object sender, InformacionPedidosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformacionPedidosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformacionPedidosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InformacionTransferenciasCompletedEventHandler(object sender, InformacionTransferenciasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformacionTransferenciasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformacionTransferenciasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InformacionTransferenciasEstatalesCompletedEventHandler(object sender, InformacionTransferenciasEstatalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformacionTransferenciasEstatalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformacionTransferenciasEstatalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InformacionRecepcionDiariaOrdenesComprasCompletedEventHandler(object sender, InformacionRecepcionDiariaOrdenesComprasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformacionRecepcionDiariaOrdenesComprasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformacionRecepcionDiariaOrdenesComprasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591