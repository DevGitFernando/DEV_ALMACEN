//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Dll_IRE_INTERMED.ws_IRE_INTERMED {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsIRE_INTERMEDSoap", Namespace="http://SC-Solutions/ServiciosWeb/")]
    public partial class wsIRE_INTERMED : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetRecetasElectronicasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecetaElectronicaOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAcuseRecetasElectronicasOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsIRE_INTERMED() {
            this.Url = global::Dll_IRE_INTERMED.Properties.Settings.Default.Dll_IRE_INTERMED_wsIRE_INTERMED_wsIRE_INTERMED;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetRecetasElectronicasCompletedEventHandler GetRecetasElectronicasCompleted;
        
        /// <remarks/>
        public event GetRecetaElectronicaCompletedEventHandler GetRecetaElectronicaCompleted;
        
        /// <remarks/>
        public event SendAcuseRecetasElectronicasCompletedEventHandler SendAcuseRecetasElectronicasCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/GetRecetasElectronicas", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRecetasElectronicas(string CLUES, string TipoDocumento) {
            object[] results = this.Invoke("GetRecetasElectronicas", new object[] {
                        CLUES,
                        TipoDocumento});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecetasElectronicasAsync(string CLUES, string TipoDocumento) {
            this.GetRecetasElectronicasAsync(CLUES, TipoDocumento, null);
        }
        
        /// <remarks/>
        public void GetRecetasElectronicasAsync(string CLUES, string TipoDocumento, object userState) {
            if ((this.GetRecetasElectronicasOperationCompleted == null)) {
                this.GetRecetasElectronicasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecetasElectronicasOperationCompleted);
            }
            this.InvokeAsync("GetRecetasElectronicas", new object[] {
                        CLUES,
                        TipoDocumento}, this.GetRecetasElectronicasOperationCompleted, userState);
        }
        
        private void OnGetRecetasElectronicasOperationCompleted(object arg) {
            if ((this.GetRecetasElectronicasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecetasElectronicasCompleted(this, new GetRecetasElectronicasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/GetRecetaElectronica", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRecetaElectronica(string CLUES, string FolioDeReceta) {
            object[] results = this.Invoke("GetRecetaElectronica", new object[] {
                        CLUES,
                        FolioDeReceta});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecetaElectronicaAsync(string CLUES, string FolioDeReceta) {
            this.GetRecetaElectronicaAsync(CLUES, FolioDeReceta, null);
        }
        
        /// <remarks/>
        public void GetRecetaElectronicaAsync(string CLUES, string FolioDeReceta, object userState) {
            if ((this.GetRecetaElectronicaOperationCompleted == null)) {
                this.GetRecetaElectronicaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecetaElectronicaOperationCompleted);
            }
            this.InvokeAsync("GetRecetaElectronica", new object[] {
                        CLUES,
                        FolioDeReceta}, this.GetRecetaElectronicaOperationCompleted, userState);
        }
        
        private void OnGetRecetaElectronicaOperationCompleted(object arg) {
            if ((this.GetRecetaElectronicaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecetaElectronicaCompleted(this, new GetRecetaElectronicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/SendAcuseRecetasElectronicas", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SendAcuseRecetasElectronicas(string CLUES, System.Data.DataSet Informacion) {
            object[] results = this.Invoke("SendAcuseRecetasElectronicas", new object[] {
                        CLUES,
                        Informacion});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SendAcuseRecetasElectronicasAsync(string CLUES, System.Data.DataSet Informacion) {
            this.SendAcuseRecetasElectronicasAsync(CLUES, Informacion, null);
        }
        
        /// <remarks/>
        public void SendAcuseRecetasElectronicasAsync(string CLUES, System.Data.DataSet Informacion, object userState) {
            if ((this.SendAcuseRecetasElectronicasOperationCompleted == null)) {
                this.SendAcuseRecetasElectronicasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAcuseRecetasElectronicasOperationCompleted);
            }
            this.InvokeAsync("SendAcuseRecetasElectronicas", new object[] {
                        CLUES,
                        Informacion}, this.SendAcuseRecetasElectronicasOperationCompleted, userState);
        }
        
        private void OnSendAcuseRecetasElectronicasOperationCompleted(object arg) {
            if ((this.SendAcuseRecetasElectronicasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAcuseRecetasElectronicasCompleted(this, new SendAcuseRecetasElectronicasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetRecetasElectronicasCompletedEventHandler(object sender, GetRecetasElectronicasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecetasElectronicasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecetasElectronicasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetRecetaElectronicaCompletedEventHandler(object sender, GetRecetaElectronicaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecetaElectronicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecetaElectronicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SendAcuseRecetasElectronicasCompletedEventHandler(object sender, SendAcuseRecetasElectronicasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAcuseRecetasElectronicasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAcuseRecetasElectronicasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591