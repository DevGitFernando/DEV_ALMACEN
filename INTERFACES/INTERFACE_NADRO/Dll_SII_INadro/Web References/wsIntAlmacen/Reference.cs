//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Dll_SII_INadro.wsIntAlmacen {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsInterfaceAlmacenSoap", Namespace="http://SC-Solutions/ServiciosWeb/")]
    public partial class wsInterfaceAlmacen : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProbarConexionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidarReferenciaPedidoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InformacionDePedidoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsInterfaceAlmacen() {
            this.Url = global::Dll_SII_INadro.Properties.Settings.Default.Dll_SII_INadro_wsIntAlmacen_wsInterfaceAlmacen;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExecuteCompletedEventHandler ExecuteCompleted;
        
        /// <remarks/>
        public event ProbarConexionCompletedEventHandler ProbarConexionCompleted;
        
        /// <remarks/>
        public event ValidarReferenciaPedidoCompletedEventHandler ValidarReferenciaPedidoCompleted;
        
        /// <remarks/>
        public event InformacionDePedidoCompletedEventHandler InformacionDePedidoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/Execute", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Execute(System.Data.DataSet InformacionCliente, string Sentencia) {
            object[] results = this.Invoke("Execute", new object[] {
                        InformacionCliente,
                        Sentencia});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsync(System.Data.DataSet InformacionCliente, string Sentencia) {
            this.ExecuteAsync(InformacionCliente, Sentencia, null);
        }
        
        /// <remarks/>
        public void ExecuteAsync(System.Data.DataSet InformacionCliente, string Sentencia, object userState) {
            if ((this.ExecuteOperationCompleted == null)) {
                this.ExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteOperationCompleted);
            }
            this.InvokeAsync("Execute", new object[] {
                        InformacionCliente,
                        Sentencia}, this.ExecuteOperationCompleted, userState);
        }
        
        private void OnExecuteOperationCompleted(object arg) {
            if ((this.ExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ProbarConexion", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProbarConexion() {
            object[] results = this.Invoke("ProbarConexion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProbarConexionAsync() {
            this.ProbarConexionAsync(null);
        }
        
        /// <remarks/>
        public void ProbarConexionAsync(object userState) {
            if ((this.ProbarConexionOperationCompleted == null)) {
                this.ProbarConexionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProbarConexionOperationCompleted);
            }
            this.InvokeAsync("ProbarConexion", new object[0], this.ProbarConexionOperationCompleted, userState);
        }
        
        private void OnProbarConexionOperationCompleted(object arg) {
            if ((this.ProbarConexionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProbarConexionCompleted(this, new ProbarConexionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/ValidarReferenciaPedido", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidarReferenciaPedido(string IdEmpresa, string IdEstado, string IdFarmacia, string FolioReferencia) {
            object[] results = this.Invoke("ValidarReferenciaPedido", new object[] {
                        IdEmpresa,
                        IdEstado,
                        IdFarmacia,
                        FolioReferencia});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidarReferenciaPedidoAsync(string IdEmpresa, string IdEstado, string IdFarmacia, string FolioReferencia) {
            this.ValidarReferenciaPedidoAsync(IdEmpresa, IdEstado, IdFarmacia, FolioReferencia, null);
        }
        
        /// <remarks/>
        public void ValidarReferenciaPedidoAsync(string IdEmpresa, string IdEstado, string IdFarmacia, string FolioReferencia, object userState) {
            if ((this.ValidarReferenciaPedidoOperationCompleted == null)) {
                this.ValidarReferenciaPedidoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidarReferenciaPedidoOperationCompleted);
            }
            this.InvokeAsync("ValidarReferenciaPedido", new object[] {
                        IdEmpresa,
                        IdEstado,
                        IdFarmacia,
                        FolioReferencia}, this.ValidarReferenciaPedidoOperationCompleted, userState);
        }
        
        private void OnValidarReferenciaPedidoOperationCompleted(object arg) {
            if ((this.ValidarReferenciaPedidoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidarReferenciaPedidoCompleted(this, new ValidarReferenciaPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SC-Solutions/ServiciosWeb/InformacionDePedido", RequestNamespace="http://SC-Solutions/ServiciosWeb/", ResponseNamespace="http://SC-Solutions/ServiciosWeb/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InformacionDePedido(string Empresa, string Estado, string Farmacia, string FolioReferencia) {
            object[] results = this.Invoke("InformacionDePedido", new object[] {
                        Empresa,
                        Estado,
                        Farmacia,
                        FolioReferencia});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InformacionDePedidoAsync(string Empresa, string Estado, string Farmacia, string FolioReferencia) {
            this.InformacionDePedidoAsync(Empresa, Estado, Farmacia, FolioReferencia, null);
        }
        
        /// <remarks/>
        public void InformacionDePedidoAsync(string Empresa, string Estado, string Farmacia, string FolioReferencia, object userState) {
            if ((this.InformacionDePedidoOperationCompleted == null)) {
                this.InformacionDePedidoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformacionDePedidoOperationCompleted);
            }
            this.InvokeAsync("InformacionDePedido", new object[] {
                        Empresa,
                        Estado,
                        Farmacia,
                        FolioReferencia}, this.InformacionDePedidoOperationCompleted, userState);
        }
        
        private void OnInformacionDePedidoOperationCompleted(object arg) {
            if ((this.InformacionDePedidoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformacionDePedidoCompleted(this, new InformacionDePedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ExecuteCompletedEventHandler(object sender, ExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ProbarConexionCompletedEventHandler(object sender, ProbarConexionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProbarConexionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProbarConexionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ValidarReferenciaPedidoCompletedEventHandler(object sender, ValidarReferenciaPedidoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidarReferenciaPedidoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidarReferenciaPedidoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InformacionDePedidoCompletedEventHandler(object sender, InformacionDePedidoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformacionDePedidoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformacionDePedidoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591