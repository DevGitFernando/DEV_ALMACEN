//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Dll_MA_IFacturacion.PAC_VirtualSoft {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataUsingDataContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback timbrarXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelarXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback verificarVigenciaOperationCompleted;
        
        private System.Threading.SendOrPostCallback crearCuentaFOperationCompleted;
        
        private System.Threading.SendOrPostCallback agregarContribuyenteFOperationCompleted;
        
        private System.Threading.SendOrPostCallback quitarContribuyenteFOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerXMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Dll_MA_IFacturacion.Properties.Settings.Default.Dll_MA_IFacturacion_PAC_VirtualSoft_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetDataUsingDataContractCompletedEventHandler GetDataUsingDataContractCompleted;
        
        /// <remarks/>
        public event timbrarXMLCompletedEventHandler timbrarXMLCompleted;
        
        /// <remarks/>
        public event cancelarXMLCompletedEventHandler cancelarXMLCompleted;
        
        /// <remarks/>
        public event verificarVigenciaCompletedEventHandler verificarVigenciaCompleted;
        
        /// <remarks/>
        public event crearCuentaFCompletedEventHandler crearCuentaFCompleted;
        
        /// <remarks/>
        public event agregarContribuyenteFCompletedEventHandler agregarContribuyenteFCompleted;
        
        /// <remarks/>
        public event quitarContribuyenteFCompletedEventHandler quitarContribuyenteFCompleted;
        
        /// <remarks/>
        public event obtenerXMLCompletedEventHandler obtenerXMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetData(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("GetData", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified) {
            this.GetDataAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        value,
                        valueSpecified}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/GetDataUsingDataContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CompositeType GetDataUsingDataContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompositeType composite) {
            object[] results = this.Invoke("GetDataUsingDataContract", new object[] {
                        composite});
            return ((CompositeType)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite, object userState) {
            if ((this.GetDataUsingDataContractOperationCompleted == null)) {
                this.GetDataUsingDataContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractOperationCompleted);
            }
            this.InvokeAsync("GetDataUsingDataContract", new object[] {
                        composite}, this.GetDataUsingDataContractOperationCompleted, userState);
        }
        
        private void OnGetDataUsingDataContractOperationCompleted(object arg) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/timbrarXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void timbrarXML([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string passwordCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string XMLOrigen, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string XMLDestino, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string MensajeError, out int timbrarXMLResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool timbrarXMLResultSpecified) {
            object[] results = this.Invoke("timbrarXML", new object[] {
                        idCuenta,
                        passwordCuenta,
                        XMLOrigen,
                        XMLDestino,
                        MensajeError});
            XMLDestino = ((string)(results[0]));
            MensajeError = ((string)(results[1]));
            timbrarXMLResult = ((int)(results[2]));
            timbrarXMLResultSpecified = ((bool)(results[3]));
        }
        
        /// <remarks/>
        public void timbrarXMLAsync(string idCuenta, string passwordCuenta, string XMLOrigen, string XMLDestino, string MensajeError) {
            this.timbrarXMLAsync(idCuenta, passwordCuenta, XMLOrigen, XMLDestino, MensajeError, null);
        }
        
        /// <remarks/>
        public void timbrarXMLAsync(string idCuenta, string passwordCuenta, string XMLOrigen, string XMLDestino, string MensajeError, object userState) {
            if ((this.timbrarXMLOperationCompleted == null)) {
                this.timbrarXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimbrarXMLOperationCompleted);
            }
            this.InvokeAsync("timbrarXML", new object[] {
                        idCuenta,
                        passwordCuenta,
                        XMLOrigen,
                        XMLDestino,
                        MensajeError}, this.timbrarXMLOperationCompleted, userState);
        }
        
        private void OntimbrarXMLOperationCompleted(object arg) {
            if ((this.timbrarXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timbrarXMLCompleted(this, new timbrarXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/cancelarXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cancelarXML([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string passwordCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RFC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sUUID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] cer, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string mensajeError, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string acuseRecibo, out int cancelarXMLResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool cancelarXMLResultSpecified) {
            object[] results = this.Invoke("cancelarXML", new object[] {
                        idCuenta,
                        passwordCuenta,
                        RFC,
                        sUUID,
                        cer,
                        key,
                        mensajeError,
                        acuseRecibo});
            mensajeError = ((string)(results[0]));
            acuseRecibo = ((string)(results[1]));
            cancelarXMLResult = ((int)(results[2]));
            cancelarXMLResultSpecified = ((bool)(results[3]));
        }
        
        /// <remarks/>
        public void cancelarXMLAsync(string idCuenta, string passwordCuenta, string RFC, string sUUID, byte[] cer, byte[] key, string mensajeError, string acuseRecibo) {
            this.cancelarXMLAsync(idCuenta, passwordCuenta, RFC, sUUID, cer, key, mensajeError, acuseRecibo, null);
        }
        
        /// <remarks/>
        public void cancelarXMLAsync(string idCuenta, string passwordCuenta, string RFC, string sUUID, byte[] cer, byte[] key, string mensajeError, string acuseRecibo, object userState) {
            if ((this.cancelarXMLOperationCompleted == null)) {
                this.cancelarXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelarXMLOperationCompleted);
            }
            this.InvokeAsync("cancelarXML", new object[] {
                        idCuenta,
                        passwordCuenta,
                        RFC,
                        sUUID,
                        cer,
                        key,
                        mensajeError,
                        acuseRecibo}, this.cancelarXMLOperationCompleted, userState);
        }
        
        private void OncancelarXMLOperationCompleted(object arg) {
            if ((this.cancelarXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelarXMLCompleted(this, new cancelarXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/verificarVigencia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void verificarVigencia([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string passwordCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string detallesLicencia, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string mensajeError, out int verificarVigenciaResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool verificarVigenciaResultSpecified) {
            object[] results = this.Invoke("verificarVigencia", new object[] {
                        idCuenta,
                        passwordCuenta,
                        detallesLicencia,
                        mensajeError});
            detallesLicencia = ((string)(results[0]));
            mensajeError = ((string)(results[1]));
            verificarVigenciaResult = ((int)(results[2]));
            verificarVigenciaResultSpecified = ((bool)(results[3]));
        }
        
        /// <remarks/>
        public void verificarVigenciaAsync(string idCuenta, string passwordCuenta, string detallesLicencia, string mensajeError) {
            this.verificarVigenciaAsync(idCuenta, passwordCuenta, detallesLicencia, mensajeError, null);
        }
        
        /// <remarks/>
        public void verificarVigenciaAsync(string idCuenta, string passwordCuenta, string detallesLicencia, string mensajeError, object userState) {
            if ((this.verificarVigenciaOperationCompleted == null)) {
                this.verificarVigenciaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverificarVigenciaOperationCompleted);
            }
            this.InvokeAsync("verificarVigencia", new object[] {
                        idCuenta,
                        passwordCuenta,
                        detallesLicencia,
                        mensajeError}, this.verificarVigenciaOperationCompleted, userState);
        }
        
        private void OnverificarVigenciaOperationCompleted(object arg) {
            if ((this.verificarVigenciaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verificarVigenciaCompleted(this, new verificarVigenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/crearCuentaF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void crearCuentaF([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nombreEmpresa, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string rfc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string razonSocial, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string correoElectronico, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string idCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string passwordCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string mensajeError, out int crearCuentaFResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool crearCuentaFResultSpecified) {
            object[] results = this.Invoke("crearCuentaF", new object[] {
                        nombreEmpresa,
                        rfc,
                        razonSocial,
                        correoElectronico,
                        idCuenta,
                        passwordCuenta,
                        mensajeError});
            idCuenta = ((string)(results[0]));
            passwordCuenta = ((string)(results[1]));
            mensajeError = ((string)(results[2]));
            crearCuentaFResult = ((int)(results[3]));
            crearCuentaFResultSpecified = ((bool)(results[4]));
        }
        
        /// <remarks/>
        public void crearCuentaFAsync(string nombreEmpresa, string rfc, string razonSocial, string correoElectronico, string idCuenta, string passwordCuenta, string mensajeError) {
            this.crearCuentaFAsync(nombreEmpresa, rfc, razonSocial, correoElectronico, idCuenta, passwordCuenta, mensajeError, null);
        }
        
        /// <remarks/>
        public void crearCuentaFAsync(string nombreEmpresa, string rfc, string razonSocial, string correoElectronico, string idCuenta, string passwordCuenta, string mensajeError, object userState) {
            if ((this.crearCuentaFOperationCompleted == null)) {
                this.crearCuentaFOperationCompleted = new System.Threading.SendOrPostCallback(this.OncrearCuentaFOperationCompleted);
            }
            this.InvokeAsync("crearCuentaF", new object[] {
                        nombreEmpresa,
                        rfc,
                        razonSocial,
                        correoElectronico,
                        idCuenta,
                        passwordCuenta,
                        mensajeError}, this.crearCuentaFOperationCompleted, userState);
        }
        
        private void OncrearCuentaFOperationCompleted(object arg) {
            if ((this.crearCuentaFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.crearCuentaFCompleted(this, new crearCuentaFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/agregarContribuyenteF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void agregarContribuyenteF([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string passwordCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string rfc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string razonSocial, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string mensajeError, out int agregarContribuyenteFResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool agregarContribuyenteFResultSpecified) {
            object[] results = this.Invoke("agregarContribuyenteF", new object[] {
                        idCuenta,
                        passwordCuenta,
                        rfc,
                        razonSocial,
                        mensajeError});
            mensajeError = ((string)(results[0]));
            agregarContribuyenteFResult = ((int)(results[1]));
            agregarContribuyenteFResultSpecified = ((bool)(results[2]));
        }
        
        /// <remarks/>
        public void agregarContribuyenteFAsync(string idCuenta, string passwordCuenta, string rfc, string razonSocial, string mensajeError) {
            this.agregarContribuyenteFAsync(idCuenta, passwordCuenta, rfc, razonSocial, mensajeError, null);
        }
        
        /// <remarks/>
        public void agregarContribuyenteFAsync(string idCuenta, string passwordCuenta, string rfc, string razonSocial, string mensajeError, object userState) {
            if ((this.agregarContribuyenteFOperationCompleted == null)) {
                this.agregarContribuyenteFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnagregarContribuyenteFOperationCompleted);
            }
            this.InvokeAsync("agregarContribuyenteF", new object[] {
                        idCuenta,
                        passwordCuenta,
                        rfc,
                        razonSocial,
                        mensajeError}, this.agregarContribuyenteFOperationCompleted, userState);
        }
        
        private void OnagregarContribuyenteFOperationCompleted(object arg) {
            if ((this.agregarContribuyenteFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.agregarContribuyenteFCompleted(this, new agregarContribuyenteFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/quitarContribuyenteF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void quitarContribuyenteF([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string passwordCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string rfc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string mensajeError, out int quitarContribuyenteFResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool quitarContribuyenteFResultSpecified) {
            object[] results = this.Invoke("quitarContribuyenteF", new object[] {
                        idCuenta,
                        passwordCuenta,
                        rfc,
                        mensajeError});
            mensajeError = ((string)(results[0]));
            quitarContribuyenteFResult = ((int)(results[1]));
            quitarContribuyenteFResultSpecified = ((bool)(results[2]));
        }
        
        /// <remarks/>
        public void quitarContribuyenteFAsync(string idCuenta, string passwordCuenta, string rfc, string mensajeError) {
            this.quitarContribuyenteFAsync(idCuenta, passwordCuenta, rfc, mensajeError, null);
        }
        
        /// <remarks/>
        public void quitarContribuyenteFAsync(string idCuenta, string passwordCuenta, string rfc, string mensajeError, object userState) {
            if ((this.quitarContribuyenteFOperationCompleted == null)) {
                this.quitarContribuyenteFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquitarContribuyenteFOperationCompleted);
            }
            this.InvokeAsync("quitarContribuyenteF", new object[] {
                        idCuenta,
                        passwordCuenta,
                        rfc,
                        mensajeError}, this.quitarContribuyenteFOperationCompleted, userState);
        }
        
        private void OnquitarContribuyenteFOperationCompleted(object arg) {
            if ((this.quitarContribuyenteFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quitarContribuyenteFCompleted(this, new quitarContribuyenteFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/obtenerXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void obtenerXML([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string passwordCuenta, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string uuid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string rfc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string XMLDestino, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string mensajeError, out int obtenerXMLResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool obtenerXMLResultSpecified) {
            object[] results = this.Invoke("obtenerXML", new object[] {
                        idCuenta,
                        passwordCuenta,
                        uuid,
                        rfc,
                        XMLDestino,
                        mensajeError});
            XMLDestino = ((string)(results[0]));
            mensajeError = ((string)(results[1]));
            obtenerXMLResult = ((int)(results[2]));
            obtenerXMLResultSpecified = ((bool)(results[3]));
        }
        
        /// <remarks/>
        public void obtenerXMLAsync(string idCuenta, string passwordCuenta, string uuid, string rfc, string XMLDestino, string mensajeError) {
            this.obtenerXMLAsync(idCuenta, passwordCuenta, uuid, rfc, XMLDestino, mensajeError, null);
        }
        
        /// <remarks/>
        public void obtenerXMLAsync(string idCuenta, string passwordCuenta, string uuid, string rfc, string XMLDestino, string mensajeError, object userState) {
            if ((this.obtenerXMLOperationCompleted == null)) {
                this.obtenerXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerXMLOperationCompleted);
            }
            this.InvokeAsync("obtenerXML", new object[] {
                        idCuenta,
                        passwordCuenta,
                        uuid,
                        rfc,
                        XMLDestino,
                        mensajeError}, this.obtenerXMLOperationCompleted, userState);
        }
        
        private void OnobtenerXMLOperationCompleted(object arg) {
            if ((this.obtenerXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerXMLCompleted(this, new obtenerXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class CompositeType {
        
        private bool boolValueField;
        
        private bool boolValueFieldSpecified;
        
        private string stringValueField;
        
        /// <remarks/>
        public bool BoolValue {
            get {
                return this.boolValueField;
            }
            set {
                this.boolValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoolValueSpecified {
            get {
                return this.boolValueFieldSpecified;
            }
            set {
                this.boolValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDataUsingDataContractCompletedEventHandler(object sender, GetDataUsingDataContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompositeType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompositeType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void timbrarXMLCompletedEventHandler(object sender, timbrarXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timbrarXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timbrarXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string XMLDestino {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MensajeError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int timbrarXMLResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool timbrarXMLResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void cancelarXMLCompletedEventHandler(object sender, cancelarXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelarXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelarXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string mensajeError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string acuseRecibo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int cancelarXMLResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool cancelarXMLResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void verificarVigenciaCompletedEventHandler(object sender, verificarVigenciaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verificarVigenciaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verificarVigenciaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string detallesLicencia {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mensajeError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int verificarVigenciaResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool verificarVigenciaResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void crearCuentaFCompletedEventHandler(object sender, crearCuentaFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class crearCuentaFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal crearCuentaFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string idCuenta {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string passwordCuenta {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int crearCuentaFResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public bool crearCuentaFResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void agregarContribuyenteFCompletedEventHandler(object sender, agregarContribuyenteFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class agregarContribuyenteFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal agregarContribuyenteFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string mensajeError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int agregarContribuyenteFResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool agregarContribuyenteFResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void quitarContribuyenteFCompletedEventHandler(object sender, quitarContribuyenteFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class quitarContribuyenteFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal quitarContribuyenteFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string mensajeError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int quitarContribuyenteFResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool quitarContribuyenteFResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void obtenerXMLCompletedEventHandler(object sender, obtenerXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string XMLDestino {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mensajeError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int obtenerXMLResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool obtenerXMLResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
}

#pragma warning restore 1591